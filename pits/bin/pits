#!/bin/bash

# PITS Project Main Script
# Main entry point for the Picture Image Transfer System

set -e

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Project configuration
PROJECT_NAME="PITS"
PROJECT_VERSION="1.0.0"

# Function to show usage
show_usage() {
    echo "Usage: $0 {start|stop|status|config|build|ftp|hotspot|help}"
    echo ""
    echo "Commands:"
    echo "  start   - Start the PITS IoT device"
    echo "  stop    - Stop the PITS IoT device"
    echo "  status  - Show project status"
    echo "  config  - Show configuration"
    echo "  build   - Build from source"
    echo "  ftp     - Start FTP server for photo uploads"
    echo "  hotspot - Start hotspot for phone connectivity"
    echo "  help    - Show this help"
    echo ""
    echo "Examples:"
    echo "  $0 start"
    echo "  $0 status"
    echo "  $0 ftp"
    echo "  $0 hotspot"
}

# Function to start project
start_project() {
    echo -e "${BLUE}üöÄ Starting $PROJECT_NAME...${NC}"
    
    # Create necessary directories
    mkdir -p var/logs var/cache var/tmp
    
    # Start services (customize as needed)
    echo "‚úÖ PITS IoT device started successfully"
    echo "üìÅ Working directory: $(pwd)"
    echo "üì± Ready for picture image transfers and hotspot management"
}

# Function to stop project
stop_project() {
    echo -e "${BLUE}üõë Stopping $PROJECT_NAME...${NC}"
    
    # Stop services (customize as needed)
    echo "‚úÖ PITS IoT device stopped successfully"
}

# Function to show status
show_status() {
    echo -e "${BLUE}üìä $PROJECT_NAME Status${NC}"
    echo "=================="
    echo "Project: $PROJECT_NAME v$PROJECT_VERSION"
    echo "Directory: $(pwd)"
    echo ""
    
    # Check directory structure
    echo "üìÅ Directory Structure:"
    for dir in bin etc src var www; do
        if [ -d "$dir" ]; then
            echo "  ‚úÖ $dir/"
        else
            echo "  ‚ùå $dir/ (missing)"
        fi
    done
    
    echo ""
    echo "üîß Configuration:"
    if [ -f "etc/config.conf" ]; then
        echo "  ‚úÖ Configuration file found"
    else
        echo "  ‚ö†Ô∏è  No configuration file"
    fi
}

# Function to show configuration
show_config() {
    echo -e "${BLUE}‚öôÔ∏è  Project Configuration${NC}"
    echo "========================"
    
    if [ -f "etc/config.conf" ]; then
        cat etc/config.conf
    else
        echo "No configuration file found"
        echo "Create etc/config.conf to customize settings"
    fi
}

# Function to build project
build_project() {
    echo -e "${BLUE}üî® Building $PROJECT_NAME...${NC}"
    
    if [ -d "src" ]; then
        echo "Building from source..."
        # Add your build commands here
        echo "‚úÖ Build completed"
    else
        echo "‚ùå Source directory not found"
        exit 1
    fi
}

# Function to start FTP server
start_ftp() {
    echo -e "${BLUE}üìÅ Starting FTP server for photo uploads...${NC}"
    
    if command -v vsftpd >/dev/null 2>&1; then
        echo "Starting vsftpd FTP server..."
        echo "FTP server running on port 21"
        echo "Photographers can upload photos via FTP"
        # Add actual FTP server start command here
    else
        echo "‚ùå vsftpd not installed. Install with: sudo apt install vsftpd"
        exit 1
    fi
}

# Function to start hotspot
start_hotspot() {
    echo -e "${BLUE}üì± Starting hotspot for phone connectivity...${NC}"
    
    if command -v hostapd >/dev/null 2>&1; then
        echo "Starting WiFi hotspot..."
        echo "Hotspot SSID: FastPhotoTransfer"
        echo "Password: fast123"
        echo "Phone can connect to manage photo processing"
        # Add actual hotspot start command here
    else
        echo "‚ùå hostapd not installed. Install with: sudo apt install hostapd"
        exit 1
    fi
}

# Main script logic
case "$1" in
    start)
        start_project
        ;;
    stop)
        stop_project
        ;;
    status)
        show_status
        ;;
    config)
        show_config
        ;;
    build)
        build_project
        ;;
    ftp)
        start_ftp
        ;;
    hotspot)
        start_hotspot
        ;;
    help|--help|-h)
        show_usage
        ;;
    *)
        echo -e "${BLUE}Welcome to $PROJECT_NAME v$PROJECT_VERSION${NC}"
        echo ""
        show_usage
        ;;
esac
